// Mocks generated by Mockito 5.0.7 from annotations
// in number_trivia/test/features/ghibliFilm/mock/ghibli_film_remote_data_source_mock.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:number_trivia/features/ghibliFilm/data/datasources/ghibli_film_remote_data_source.dart'
    as _i3;
import 'package:number_trivia/features/ghibliFilm/data/models/ghibli_film_model.dart'
    as _i2;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeGhibliFilmModel extends _i1.Fake implements _i2.GhibliFilmModel {}

/// A class which mocks [GhibliFilmRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGhibliFilmRemoteDataSource extends _i1.Mock
    implements _i3.GhibliFilmRemoteDataSource {
  @override
  _i4.Future<_i2.GhibliFilmModel> getGhibliFilmById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getGhibliFilmById, [id]),
              returnValue:
                  Future<_i2.GhibliFilmModel>.value(_FakeGhibliFilmModel()))
          as _i4.Future<_i2.GhibliFilmModel>);
  @override
  _i4.Future<_i2.GhibliFilmModel> getRandomGhibliFilm(String? id) =>
      (super.noSuchMethod(Invocation.method(#getRandomGhibliFilm, [id]),
              returnValue:
                  Future<_i2.GhibliFilmModel>.value(_FakeGhibliFilmModel()))
          as _i4.Future<_i2.GhibliFilmModel>);
}
